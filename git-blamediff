#!/usr/bin/env zsh

setopt extendedglob

[[ $XPLEASE ]] && set -x

color_header=$(git config --get-color color.diff.meta bold)
color_hunk_header=$(git config --get-color color.diff.frag cyan)
color_new=$(git config --get-color color.diff.new green)
color_old=$(git config --get-color color.diff.old red)

toplevel=$(git rev-parse --show-toplevel)

printprefix() {
    printf '%s' "$@" ' '
}

parse_porcelain() {
    reply=()

    output=(${(f)"$(git -C $toplevel --no-pager blame --porcelain -L "$@")"})
    output=(${(M)output:#[a-f0-9](#c40)*})

    local line
    for line in $output; do
        reply+=(${line:0:7})
    done
}

git diff --color "$@" | while IFS= read -r line; do
    if [[ $line = $color_header+++* ]]; then
        file=${line#*+++ [iwb2]/}
        file=${file%$'\e'*}
    elif [[ $line = $color_hunk_header@@* ]]; then
        [[ $line =~ '@@ -([[:digit:]]*)(,[[:digit:]]*)? \+([[:digit:]]*)(,[[:digit:]]*)? @@' ]]

        oldfrom=$match[1]
        if [[ -n $match[2] && $match[2] != ,0  ]]; then
            oldto=${match[2]#,}
        else
            oldto=$oldfrom
        fi

        newfrom=$match[3]
        if [[ -n $match[4] && $match[2] != ,0 ]]; then
            newto=${match[4]#,}
        else
            newto=$newfrom
        fi

        parse_porcelain $oldfrom,+$oldto HEAD -- $file
        oldblame=($reply)
        parse_porcelain $newfrom,+$newto -- $file
        newblame=($reply)

        oldindex=1
        newindex=1
    elif [[ $line = ' '* ]]; then
        printprefix $newblame[newindex]
        ((newindex++))
        ((oldindex++))
    elif [[ $line = $color_old-* ]]; then
        printprefix $color_old $oldblame[oldindex++]
    elif [[ $line = $color_new+* ]]; then
        printprefix $color_new $newblame[newindex++]
    fi

    print -r $line
done
