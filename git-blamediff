#!/usr/bin/env zsh

setopt extendedglob

[[ $XPLEASE ]] && set -x

if [[ -t 1 ]] || (( $@[(I)--color] > 0 )); then
    color_header=$(git config --get-color color.diff.meta bold)
    color_hunk_header=$(git config --get-color color.diff.frag cyan)
    color_new=$(git config --get-color color.diff.new green)
    color_old=$(git config --get-color color.diff.old red)

    color=1
fi

toplevel=$(git rev-parse --show-toplevel)

printprefix() {
    printf '%s' "$@" ' '
}

parse_porcelain() {
    reply=()

    output=(${(f)"$(git -C $toplevel --no-pager blame --porcelain -L "$@")"})
    output=(${(M)output:#[a-f0-9](#c40)*})

    local line
    for line in $output; do
        reply+=(${line:0:7})
    done
}

revs=(${(f)"$(git rev-parse --revs-only "$@")"})

if (( $#revs == 0 )); then
    revs=(HEAD '')
elif (( $#revs == 1 )); then
    revs=($revs '')
fi

git diff ${color:+--color} "$@" | while IFS= read -r line; do
    if [[ $line = ${color_header}diff\ --git* ]]; then
        IFS= read -r index
        IFS= read -r a_line
        IFS= read -r b_line

        file=${b_line#*+++ [iwb2]/}
        file=${file%$'\e'*}
        print -lr -- $line $index $a_line $b_line
    elif [[ $line =~ '@@ -([[:digit:]]*)(,[[:digit:]]*)? \+([[:digit:]]*)(,[[:digit:]]*)? @@' ]]; then
        oldfrom=$match[1]
        if [[ -n $match[2] && $match[2] != ,0  ]]; then
            oldto=${match[2]#,}
        else
            oldto=$oldfrom
        fi

        newfrom=$match[3]
        if [[ -n $match[4] && $match[2] != ,0 ]]; then
            newto=${match[4]#,}
        else
            newto=$newfrom
        fi

        parse_porcelain $oldfrom,+$oldto $revs[1] -- $file
        oldblame=($reply)
        parse_porcelain $newfrom,+$newto $revs[2] -- $file
        newblame=($reply)

        oldindex=1
        newindex=1

        print -r -- $line
    else
        if [[ $line = ' '* ]]; then
            printprefix $newblame[newindex]
            ((newindex++))
            ((oldindex++))
        elif [[ $line = $color_old-* ]]; then
            printprefix $color_old $oldblame[oldindex++]
        elif [[ $line = $color_new+* ]]; then
            printprefix $color_new $newblame[newindex++]
        fi

        print -r -- $line
    fi
done
